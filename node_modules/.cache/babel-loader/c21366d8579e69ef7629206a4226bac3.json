{"ast":null,"code":"export function getInitialGrid(START_NODE_COL, START_NODE_ROW, END_NODE_COL, END_NODE_ROW) {\n  const grid = [];\n  for (let row = 0; row < 20; row++) {\n    const currentRow = [];\n    for (let col = 0; col < 47; col++) {\n      currentRow.push(createNode(col, row, START_NODE_COL, START_NODE_ROW, END_NODE_COL, END_NODE_ROW));\n    }\n    grid.push(currentRow);\n  }\n  return grid;\n}\nconst createNode = (col, row, START_NODE_COL, START_NODE_ROW, END_NODE_COL, END_NODE_ROW) => {\n  return {\n    row,\n    col,\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\n    isEnd: row === END_NODE_ROW && col === END_NODE_COL,\n    distance: Infinity,\n    isVisited: false,\n    isWall: false,\n    previousNode: null\n  };\n};","map":{"version":3,"names":["getInitialGrid","START_NODE_COL","START_NODE_ROW","END_NODE_COL","END_NODE_ROW","grid","row","currentRow","col","push","createNode","isStart","isEnd","distance","Infinity","isVisited","isWall","previousNode"],"sources":["C:/Users/hp/Desktop/ShortestPath/Path-Finding-visualiser/src/helpers/gridInitialize.js"],"sourcesContent":["export function getInitialGrid(\r\n  START_NODE_COL,\r\n  START_NODE_ROW,\r\n  END_NODE_COL,\r\n  END_NODE_ROW\r\n) {\r\n  const grid = [];\r\n  for (let row = 0; row < 20; row++) {\r\n    const currentRow = [];\r\n    for (let col = 0; col < 47; col++) {\r\n      currentRow.push(\r\n        createNode(\r\n          col,\r\n          row,\r\n          START_NODE_COL,\r\n          START_NODE_ROW,\r\n          END_NODE_COL,\r\n          END_NODE_ROW\r\n        )\r\n      );\r\n    }\r\n    grid.push(currentRow);\r\n  }\r\n  return grid;\r\n}\r\n\r\nconst createNode = (\r\n  col,\r\n  row,\r\n  START_NODE_COL,\r\n  START_NODE_ROW,\r\n  END_NODE_COL,\r\n  END_NODE_ROW\r\n) => {\r\n  return {\r\n    row,\r\n    col,\r\n    isStart: row === START_NODE_ROW && col === START_NODE_COL,\r\n    isEnd: row === END_NODE_ROW && col === END_NODE_COL,\r\n    distance: Infinity,\r\n    isVisited: false,\r\n    isWall: false,\r\n    previousNode: null,\r\n  };\r\n};\r\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAC5BC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,YAAY,EACZ;EACA,MAAMC,IAAI,GAAG,EAAE;EACf,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAEA,GAAG,EAAE,EAAE;IACjC,MAAMC,UAAU,GAAG,EAAE;IACrB,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAG,EAAE,EAAEA,GAAG,EAAE,EAAE;MACjCD,UAAU,CAACE,IAAI,CACbC,UAAU,CACRF,GAAG,EACHF,GAAG,EACHL,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,YACF,CACF,CAAC;IACH;IACAC,IAAI,CAACI,IAAI,CAACF,UAAU,CAAC;EACvB;EACA,OAAOF,IAAI;AACb;AAEA,MAAMK,UAAU,GAAGA,CACjBF,GAAG,EACHF,GAAG,EACHL,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,YAAY,KACT;EACH,OAAO;IACLE,GAAG;IACHE,GAAG;IACHG,OAAO,EAAEL,GAAG,KAAKJ,cAAc,IAAIM,GAAG,KAAKP,cAAc;IACzDW,KAAK,EAAEN,GAAG,KAAKF,YAAY,IAAII,GAAG,KAAKL,YAAY;IACnDU,QAAQ,EAAEC,QAAQ;IAClBC,SAAS,EAAE,KAAK;IAChBC,MAAM,EAAE,KAAK;IACbC,YAAY,EAAE;EAChB,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}